/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN EmployeeActionsGenerated.js PLEASE EDIT ../EmployeeActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import EmployeeApi from "../../../api/EmployeeApi";

let actionsFunction = {

  //CRUD METHODS

  // Create employee
  createEmployee: function(employee) {
    return function(dispatch) {
      return EmployeeApi
        .createEmployee(employee)
        .then(employee => {
          dispatch(actionsFunction.createEmployeeSuccess(employee));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createEmployeeSuccess: function(employee) {
    return { type: types.CREATE_EMPLOYEE_SUCCESS, payload: employee };
  },


  // Delete employee
  deleteEmployee: function(id) {
    return function(dispatch) {
      return EmployeeApi
        .deleteEmployee(id)
        .then(employee => {
          dispatch(actionsFunction.deleteEmployeeSuccess(employee));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteEmployeeSuccess: function(employee) {
    return { type: types.DELETE_EMPLOYEE_SUCCESS, payload: employee };
  },


  // Get employee
  loadEmployee: function(id) {
    return function(dispatch) {
      return EmployeeApi
        .getOneEmployee(id)
        .then(employee => {
          dispatch(actionsFunction.loadEmployeeSuccess(employee));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadEmployeeSuccess: function(employee) {
    return { type: types.GET_EMPLOYEE_SUCCESS, payload: employee };
  },

  // Load  list
  loadEmployeeList: function() {
    return function(dispatch) {
      return EmployeeApi
        .getEmployeeList()
        .then(list => {
          dispatch(actionsFunction.loadEmployeeListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadEmployeeListSuccess: function(list) {
    return { type: types.LIST_EMPLOYEE_SUCCESS, payload: list };
  },

	
  // Save employee
  saveEmployee: function(employee) {
    return function(dispatch) {
      return EmployeeApi
        .saveEmployee(employee)
        .then(employee => {
          dispatch(actionsFunction.saveEmployeeSuccess(employee));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveEmployeeSuccess: function(employee) {
    return { type: types.UPDATE_EMPLOYEE_SUCCESS, payload: employee };
  },


  /*
  Name: me
  Description: get my profile
  Params: 
  */
  me: function(...params) {
    return function(dispatch) {
      return EmployeeApi
        .me(params)
        .then( result => {
          dispatch(actionsFunction.meSuccess(result));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  meSuccess: function(result) {
    return { type: types.ME_EMPLOYEE_SUCCESS, payload: result };
  },
		
};

export default actionsFunction;
